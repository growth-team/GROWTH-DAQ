
require "fileutils"
require "yaml"

GROWTH_CONFIG_FILE = "/home/pi/growth_config.yaml"

if !File.exist?(GROWTH_CONFIG_FILE) then
	STDERR.puts "Error: growth_config file not found at #{GROWTH_CONFIG_FILE}"
	exit(-1)
end

# Load detectorID
begin
	yaml = YAML.load(open(GROWTH_CONFIG_FILE))
	if(yaml["detectorID"]==nil)then
		STDERR.puts "Error: detectorID is not defined in #{GROWTH_CONFIG_FILE}"
	end
	@detectorID = yaml["detectorID"]
rescue
	STDERR.puts "Error: #{GROWTH_CONFIG_FILE} parse error"
end

LOG_DIR = "/var/log/growth"
GIT_DIR = "/home/pi/git"
GROWTH_DAQ_GIT_DIR = "#{GIT_DIR}/GROWTH-DAQ/"
GROWTH_CONTROLLER_LIB_DIR = "#{GROWTH_DAQ_GIT_DIR}/controller/lib"
GROWTH_CONTROLLER_BIN_DIR = "#{GROWTH_DAQ_GIT_DIR}/controller/bin"
GROWTH_DAQ_RUN_DIR = "/home/pi/work/growth/data/#{@detectorID}"
GROWTH_DAQ_LOG = "#{LOG_DIR}/growth_daq.log"
GROWTH_DAQ_DEVICE = "/dev/ttyUSB1"
GROWTH_DAQ_CONFIG = "#{GROWTH_DAQ_GIT_DIR}/daq/configurationFile/configuration_20160828_2247_fy2016.yaml"
GROWTH_DAQ_EXPOSURE = 0

# Create folder if does not exist
if(!File.exist?(LOG_DIR))then
	FileUtils.mkdir_p(LOG_DIR)
end
FileUtils.chown_R("pi", "pi", LOG_DIR)

if(!File.exist?(GROWTH_DAQ_RUN_DIR))then
	FileUtils.mkdir_p(GROWTH_DAQ_RUN_DIR)
end
FileUtils.chown_R("pi", "pi", GROWTH_DAQ_RUN_DIR)

# Environmental variables
ADDITIONAL_ENV = { 
	"GROWTH_CONFIG_FILE" => GROWTH_CONFIG_FILE,
	"GROWTH_KEY_FILE" => "#{GIT_DIR}/GROWTH-Keys/growth-keys.json",
	"GROWTH_REPOSITORY" => GROWTH_DAQ_GIT_DIR,
	"RUBYLIB" => "#{GROWTH_CONTROLLER_LIB_DIR}:$RUBYLIB"
}

# growth_detector_controller
God.watch do |w|
  w.name = "growth_controller"
  w.start = "#{GROWTH_CONTROLLER_BIN_DIR}/growth_controller.rb --log-level=warn --log-device=file --log-dir=#{LOG_DIR}"
  w.env = ADDITIONAL_ENV
  w.log = "#{LOG_DIR}/growth_controller.stdout"
  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 30.seconds
      c.running = false
    end
  end
end

# growth_daq_run_manager
God.watch do |w|
  w.name = 'growth_daq_run_manager'
  w.start = "#{GROWTH_CONTROLLER_BIN_DIR}/growth_daq_run_manager.rb --log-level=warn --log-device=file --log-dir=#{LOG_DIR}"
  w.env = ADDITIONAL_ENV
  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 30.seconds
      c.running = false
    end
  end
end

# growth_display_server
God.watch do |w|
  w.name = 'growth_display_server'
  w.start = "python #{GROWTH_CONTROLLER_BIN_DIR}/growth_display_server.py"
  w.env = ADDITIONAL_ENV
  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 30.seconds
      c.running = false
    end
  end
end

# growth_display_updater
God.watch do |w|
  w.name = 'growth_display_updater'
  w.start = "#{GROWTH_CONTROLLER_BIN_DIR}/growth_display_updater.rb --log-level=warn --log-device=file --log-dir=#{LOG_DIR}"
  w.env = ADDITIONAL_ENV
  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 30.seconds
      c.running = false
    end
  end
end

# growth_daq
God.watch do |w|
  w.name = 'growth_daq'
  w.start = <<EOS
#{GROWTH_DAQ_GIT_DIR}/daq/build/growth_daq \
    #{GROWTH_DAQ_DEVICE} #{GROWTH_DAQ_CONFIG} #{GROWTH_DAQ_EXPOSURE} \
    2> #{GROWTH_DAQ_LOG}
EOS
  w.env = ADDITIONAL_ENV
  # Execute DAQ program as pi user
  w.uid = "pi"
  w.gid = "pi"
  w.dir = GROWTH_DAQ_RUN_DIR
  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 30.seconds
      c.running = false
    end
  end
end
